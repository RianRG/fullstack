{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/home.service\";\nimport * as i2 from \"@angular/forms\";\nexport class HomeComponent {\n  constructor(homeService, fb) {\n    this.homeService = homeService;\n    this.fb = fb;\n    this.form = this.fb.group({\n      email: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    this.homeService.get().subscribe(data => {\n      console.log(data);\n    });\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HomeService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"text\", \"formControlName\", \"email\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"aside\")(3, \"label\", 1);\n        i0.ɵɵtext(4, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","HomeComponent","constructor","homeService","fb","form","group","email","required","onSubmit","get","subscribe","data","console","log","_","i0","ɵɵdirectiveInject","i1","HomeService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","HomeComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/home/rian/fullstack/angular/src/app/components/home/home.component.ts","/home/rian/fullstack/angular/src/app/components/home/home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  form!: FormGroup;\n\n  constructor(\n    private homeService: HomeService,\n    private fb: FormBuilder\n    ){\n      this.form = this.fb.group({\n        email: ['', Validators.required]\n      })\n  }\n\n  onSubmit(){\n    this.homeService.get().subscribe(data =>{\n      console.log(data);\n    })\n  }\n}\n","<main>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n    <aside>\n      <label for=\"email\">Email</label>\n      <input type=\"text\" formControlName=\"email\">\n    </aside>\n  </form>\n</main>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,aAAa;EAIxBC,YACUC,WAAwB,EACxBC,EAAe;IADf,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,EAAE,GAAFA,EAAE;IAER,IAAI,CAACC,IAAI,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACxBC,KAAK,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ;KAChC,CAAC;EACN;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACN,WAAW,CAACO,GAAG,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACtCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBAjBUd,aAAa,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbrB,aAAa;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT1Bb,EAAA,CAAAe,cAAA,WAAM;QACEf,EAAA,CAAAgB,UAAA,sBAAAC,gDAAA;UAAA,OAAYH,GAAA,CAAArB,QAAA,EAAU;QAAA,EAAC;QAC3BO,EAAA,CAAAe,cAAA,YAAO;QACcf,EAAA,CAAAkB,MAAA,YAAK;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAChCnB,EAAA,CAAAoB,SAAA,eAA2C;QAC7CpB,EAAA,CAAAmB,YAAA,EAAQ;;;QAJoBnB,EAAA,CAAAqB,SAAA,GAAkB;QAAlBrB,EAAA,CAAAsB,UAAA,cAAAR,GAAA,CAAAzB,IAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}